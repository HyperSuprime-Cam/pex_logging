# -*- python -*-
Import("env")

env.Program("testLogRecord",["testLogRecord.cc"], LIBS=env.libs["boost"] + ["utils"] + ["daf_base"] + ["pex_logging"])
env.Program("testPropertyPrinter",["testPropertyPrinter.cc"], LIBS=env.libs["boost"] + ["utils"] + ["daf_base"] + ["pex_logging"])
env.Program("testLogFormatter", ["testLogFormatter.cc"], LIBS=env.libs["boost"] + ["utils"] + ["daf_base"] + ["pex_logging"])
env.Program("testLogDestination", ["testLogDestination.cc"], LIBS=env.libs["boost"] + ["utils"] + ["daf_base"] + ["pex_logging"])
env.Program("testLog", ["testLog.cc"], LIBS=env.libs["boost"] + ["utils"] + ["daf_base"]  + ["pex_logging"])
env.Program("testDebug", ["testDebug.cc"], LIBS=env.libs["boost"] + ["utils"] + ["daf_base"]  + ["pex_logging"])
env.Program("testNoDebug", ["testNoDebug.cc"], LIBS=env.libs["boost"] + ["utils"] + ["daf_base"]  + ["pex_logging"])

#
# Tests
#
import lsst.tests
import os

tests = lsst.tests.Control(env, verbose = True)
tests.run("testLogRecord.cc")
tests.run("testPropertyPrinter.cc")
tests.run("testLogFormatter.cc")
tests.run("testLogDestination.cc")
tests.run("testLog.cc")
tests.run("testDebug.cc")
tests.run("testNoDebug.cc")

env.CheckSwig("python", ilang="c++")
env.Append(SWIGFLAGS=" -Ipython")

for target in tests.run("test*.py"):
    env.Depends(target,
              "../python/lsst/pex/logging/_loggingLib%s" % (env['LDMODULESUFFIX']))
